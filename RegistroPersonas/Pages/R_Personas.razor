@page "/personas"

@using Models
@using RegistroPersonas.BLL;

@inject IToastService toast

    <EditForm Model="Persona" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card">
            <div class="card-header">
                <h3>Registro de personas</h3>
            </div>

            <div class="card-body">
                <form>
                    @*PersonaId*@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>Persona Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="Persona.PersonasId" class="form-control col-4"></InputNumber>
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Nombre*@
                    <div class="form-group">
                        <label>Nombre</label>
                        <InputText @bind-Value="Persona.Nombre"
                                   class="form-control"></InputText>
                        <ValidationMessage For="@(()=>Persona.Nombre)" />
                    </div>

                    @*Telefono*@
                    <div class="form-group">
                        <label>Telefono</label>
                        <InputText @bind-Value="Persona.Telefono"
                                   class="form-control"></InputText>
                        <ValidationMessage For="@(()=>Persona.Telefono)" />
                    </div>

                    @*Cedula*@
                    <div class="form-group">
                        <label>Cedula</label>
                        <InputText @bind-Value="Persona.Cedula"
                                     class="form-control"></InputText>
                        <ValidationMessage For="@(()=>Persona.Cedula)" />
                    </div>

                    @*Direccion*@
                    <div class="form-group">
                        <label>Direccion</label>
                        <InputTextArea @bind-Value="Persona.Direccion"
                                       class="form-control"></InputTextArea>
                        <ValidationMessage For="@(()=>Persona.Direccion)" />
                    </div>

                    @*Fecha de nacimiento*@
                    <div class="form-group">
                        <label>Fecha nacimiento</label>
                        <InputDate @bind-Value="Persona.FechaNacimiento"
                                   class="form-control"></InputDate>
                        <ValidationMessage For="@(()=>Persona.FechaNacimiento)" />
                    </div>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>

            </div>
        </div>
    </EditForm>

@code {
    private Personas Persona = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Persona = new Personas();
    }

    private void Buscar()
    {
        if (Persona.PersonasId > 0)
        {
            var encontrado = PersonasBLL.Buscar(Persona.PersonasId);

            if (encontrado != null)
                this.Persona = encontrado;
            else
            {
                Nuevo();
                toast.ShowWarning("¡No encontrado!");
            }

        }
    }

    public void Guardar()
    {
        bool paso;
        paso = PersonasBLL.Guardar(Persona);

        if (paso)
        {
            Nuevo();
            toast.ShowSuccess("¡Guardado con éxito!");
        }
        else
            toast.ShowError("¡No se pudo guardar!");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(Persona.PersonasId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("¡Eliminado con éxito!");
        }
        else
            toast.ShowError("¡No se pudo eliminar!");
    }
}
